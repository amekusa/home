# Your snippets
#
# Atom snippets allow you to enter a simple prefix in the editor and hit tab to
# expand the prefix into a larger code block with templated values.
#
# You can create a new snippet in this file by typing "snip" and then hitting
# tab.
#
# An example CoffeeScript snippet to expand log to console.log:
#
# '.source.coffee':
#   'Console log':
#     'prefix': 'log'
#     'body': 'console.log $1'
#
# Each scope (e.g. '.source.coffee' above) can only be declared once.
#
# This file uses CoffeeScript Object Notation (CSON).
# If you are unfamiliar with CSON, you can read more about it in the
# Atom Flight Manual:
# http://flight-manual.atom.io/using-atom/sections/basic-customization/#_cson
'.source.js':
  'import':
    'prefix': 'import'
    'body': "import ${1:Module} from '${2:module}'"
  'require':
    'prefix': 'require'
    'body': "require('${1:module}')"
  'new Promise((resolve, reject) => {})':
    'prefix': 'prom'
    'body': "new Promise((resolve, reject) => {$1})"
  'describe()':
    'prefix': 'describe'
    'body': "describe(`$1`, () => {$2});"
  'it()':
    'prefix': 'it'
    'body': "it(`$1`, () => {$2});"
  '@param':
    'prefix': 'aparam'
    'body': "@param {${1:any}} ${2:arg}"
  '@return':
    'prefix': 'areturn'
    'body': "@return $1"
  '@type':
    'prefix': 'atype'
    'body': "@type {${1:any}}"
  '@link':
    'prefix': 'alink'
    'body': "{@link $1}"
