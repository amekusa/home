[
  // toggle terminal focus (ctrl+shift+;)
  {
    "key": "ctrl+shift+[Semicolon]",
    "command": "workbench.action.terminal.focus",
    "when": "!terminalFocus"
  },
  {
    "key": "ctrl+shift+[Semicolon]",
    "command": "workbench.action.focusActiveEditorGroup",
    "when": "terminalFocus"
  },

  // toggle bottom panel (ctrl+shift+@)
  {
    "key": "ctrl+shift+[BracketLeft]",
    "command": "-workbench.action.terminal.toggleTerminal",
    "when": "terminal.active"
  },
  {
    "key": "ctrl+shift+[BracketLeft]",
    "command": "workbench.action.togglePanel"
  },

  // focus/cycle editor pane (cmd+;)
  {
    "key": "cmd+[Semicolon]",
    "command": "workbench.action.focusNextGroup"
  },

  // duplicate cursor above (alt+cmd+i)
  {
    "key": "alt+cmd+i",
    "command": "editor.action.insertCursorAbove",
    "when": "editorTextFocus"
  },
  {
    "key": "alt+cmd+up",
    "command": "-editor.action.insertCursorAbove",
    "when": "editorTextFocus"
  },

  // duplicate cursor below (alt+cmd+k)
  {
    "key": "alt+cmd+k",
    "command": "editor.action.insertCursorBelow",
    "when": "editorTextFocus"
  },
  {
    "key": "alt+cmd+down",
    "command": "-editor.action.insertCursorBelow",
    "when": "editorTextFocus"
  },

  // toggle bookmark (ctrl+shift+k)
  {
    "key": "ctrl+shift+k",
    "command": "bookmarks.toggle"
  },

  // find and replace (cmd+r)
  {
    "key": "ctrl+shift+cmd+r",
    "command": "workbench.action.reloadWindow",
    "when": "isDevelopment"
  },
  {
    "key": "cmd+r",
    "command": "-workbench.action.reloadWindow",
    "when": "isDevelopment"
  },
  {
    "key": "cmd+r",
    "command": "editor.action.startFindReplaceAction",
    "when": "editorFocus || editorIsOpen"
  },
  {
    "key": "alt+cmd+f",
    "command": "-editor.action.startFindReplaceAction",
    "when": "editorFocus || editorIsOpen"
  },

  // stage selected ranges (cmd+k cmd+s)
  {
    "key": "cmd+k cmd+s",
    "command": "git.stageSelectedRanges",
    "when": "editorTextFocus"
  },

  // go to next change (cmd+j)
  {
    "key": "cmd+j",
    "command": "workbench.action.editor.nextChange",
    "when": "editorTextFocus && !textCompareEditorActive"
  },
  {
    "key": "alt+f5",
    "command": "-workbench.action.editor.nextChange",
    "when": "editorTextFocus && !textCompareEditorActive"
  },
  {
    "key": "cmd+j",
    "command": "-workbench.action.togglePanel"
  },
  {
    "key": "cmd+j",
    "command": "workbench.action.compareEditor.nextChange",
    "when": "textCompareEditorVisible"
  },
  {
    "key": "alt+f5",
    "command": "-workbench.action.compareEditor.nextChange",
    "when": "textCompareEditorVisible"
  },

  // go to previous change (shift+cmd+j)
  {
    "key": "shift+cmd+j",
    "command": "workbench.action.editor.previousChange",
    "when": "editorTextFocus && !textCompareEditorActive"
  },
  {
    "key": "shift+alt+f5",
    "command": "-workbench.action.editor.previousChange",
    "when": "editorTextFocus && !textCompareEditorActive"
  },
  {
    "key": "shift+cmd+j",
    "command": "-workbench.action.search.toggleQueryDetails",
    "when": "inSearchEditor || searchViewletFocus"
  },
  {
    "key": "shift+cmd+j",
    "command": "workbench.action.compareEditor.previousChange",
    "when": "textCompareEditorVisible"
  },
  {
    "key": "shift+alt+f5",
    "command": "-workbench.action.compareEditor.previousChange",
    "when": "textCompareEditorVisible"
  },

  // filetree: create new file (cmd+n)
  {
    "key": "cmd+n",
    "command": "explorer.newFile",
    "when": "filesExplorerFocus"
  },
  {
    "key": "space",
    "command": "explorer.openAndPassFocus",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsFolder && !inputFocus"
  },

  // filetree: open file and focus editor (space)
  //           shift+space: open file and do not focus editor
  {
    "key": "cmd+down",
    "command": "-explorer.openAndPassFocus",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsFolder && !inputFocus"
  },
  {
    "key": "shift+space",
    "command": "filesExplorer.openFilePreserveFocus",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsFolder && !inputFocus"
  },
  {
    "key": "space",
    "command": "-filesExplorer.openFilePreserveFocus",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsFolder && !inputFocus"
  }
]