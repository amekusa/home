# === TMUX CONFIGURATION ===

# NOTE:
#   -s = Server options
#   -g = Global options
#   -w = Window options
#   -a = Append
#   -u = Unset

# NOTE:
#   Format Syntax:
#   - #{<var>}       = Interpolate the value of <var>
#   - #{?<flag>,A,B} = If <flag> is 1, outputs A, otherwise B
#   - #[<styles>]    = bg=<color>, fg=<color>, bold, italics, etc.
#                      Multiple styles must be separated with '#,'
#   - #{<fn>:arg}    = Passing an argument to <fn>
#   - #{l:text}      = Outputs text literally

# kill empty server?
set -s exit-empty off

# enable advanced terminal features (true-color, italics, undercurls, etc.)
set -s default-terminal 'tmux-256color'  # NOTE: 'tmux-256color' terminfo has to be installed
# set -s default-terminal "${TERM}"
#   NOTE:
#   - Not recommended
#   - The terminfo specific to your terminal emulator has to be installed
#   - Neovim raises a warning to this setting

set -sa terminal-overrides ',*:Tc'  # enable true-color

# wait-time for escape key to register (ms)
set -s escape-time 0

# receive focus events from terminal?
set -s focus-events on

# run the default shell without loading .profile or .zprofile
set -g default-command $SHELL

# kill empty session?
set -g destroy-unattached on

# enable mouse integration?
set -g mouse on

# remove status bar
set -g status off
set -g status-interval 0  # no update
#   NOTE: To check all the current status options:
#         $ tmux show-options -g | grep status

# rename windows automatically
set -g automatic-rename on
set -g automatic-rename-format '#{b:pane_current_path}'  # 'b:' = basename

# size of the top-left pane
set -g main-pane-width  62%
set -g main-pane-height 62%

# border colors
set -g pane-border-style fg=colour240


# ---- KEY BINDINGS ----

# unbind default bindings
unbind -a

# ctrl+a = prefix
set -g prefix C-a
bind C-a send-prefix  # press prefix twice to send actual ctrl+a

# repeat timeout
set -g repeat-time 500  # ms
#   NOTE: Bindings with '-r' can be repeatable without pressing the prefix again in this time.


# -- PANES --

# x = kill pane
bind x confirm-before -p 'kill pane ###{pane_index} (running: #[bold]#{pane_current_command}#[none]) ? - [y/n]' kill-pane

# i = split window right
bind i split-window -h -c '#{pane_current_path}'

# - = split window below
bind - split-window -v -c '#{pane_current_path}'

# switch layout:
bind / { # large left, small right
	if -F '#{==:#{window_panes},1}' { split-window -h -c '#{pane_current_path}' } # if single pane, split right
	select-layout main-vertical
}

bind _ { # large top, small bottom
	if -F '#{==:#{window_panes},1}' { split-window -v -c '#{pane_current_path}' } # if single pane, split below
	select-layout main-horizontal
}

# h/j/k/l = switch pane
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R
bind p last-pane

# switch pane by index
bind 0 select-pane -t 0
bind 1 select-pane -t 1
bind 2 select-pane -t 2
bind 3 select-pane -t 3
bind 9 select-pane -t 1
bind 8 select-pane -t 2
bind 7 select-pane -t 3

# H/J/K/L = swap panes
bind H swap-pane -d -t '{left-of}'
bind J swap-pane -d -t '{down-of}'
bind K swap-pane -d -t '{up-of}'
bind L swap-pane -d -t '{right-of}'
bind P swap-pane -d -t '{last}'

# s/d/e/f = resize pane
bind -r s resize-pane -L 8
bind -r d resize-pane -D 4
bind -r e resize-pane -U 4
bind -r f resize-pane -R 8
bind z resize-pane -Z
bind m resize-pane -Z

# ; = toggle zoom + switch pane
bind \; if -F '#{==:#{window_panes},1}' { # single pane
	split-window -v -c '#{pane_current_path}'
} { # multiple panes
	if -F '#{window_zoomed_flag}' {
		resize-pane -Z
		last-pane
	} {
		last-pane
		resize-pane -Z
	}
}


# -- WINDOWS --

# q = kill window
bind q confirm-before -p 'kill window ###{window_index} "#{window_name}" ? - [y/n]' kill-window

# n = new window
bind n new-window

# w = last window
bind w last-window

# a = show window list
bind a choose-tree -Zw -F '\
#{?session_format, Session: #{t/f/#{l:%m/%d ◷ %H:%M}:session_created} - #{t/f/#{l:%m/%d ◷ %H:%M}:session_activity},\
#{?window_format, ◷ #{t/f/#{l:%H:%M}:window_activity} \
#{?window_active,#[bg=brightwhite#,fg=black#,bold] #{p16:#{=/15/…:#{?window_zoomed_flag,◱ ,}#{window_name}}} ,\
#{?window_last_flag,#[bg=cyan#,fg=black#,bold] #{p16:#{=/15/…:#{?window_zoomed_flag,◱ ,}#{window_name}}} ,\
▏#{p16:#{=/15/…:#{?window_zoomed_flag,◱ ,}#{window_name}}}▕}}#[bg=default#,fg=default#,none]\
#{P: #{?pane_active,,#[dim]}#{pane_current_command}#[none]},\
#{?pane_format, #{?pane_active,#[bold],}#{pane_current_command}#[none],}}}'

# A = swap windows
bind A choose-tree -Zw -F '\
#{?session_format, Session: #{t/f/#{l:%m/%d ◷ %H:%M}:session_created} - #{t/f/#{l:%m/%d ◷ %H:%M}:session_activity},\
#{?window_format, ◷ #{t/f/#{l:%H:%M}:window_activity} \
#{?window_active,#[bg=magenta#,fg=black] ⇆  #[bg=brightwhite#,fg=black#,bold] #{p16:#{=/15/…:#{?window_zoomed_flag,◱ ,}#{window_name}}} ,\
#{?window_last_flag,#[bg=cyan#,fg=black#,bold] #{p16:#{=/15/…:#{?window_zoomed_flag,◱ ,}#{window_name}}} ,\
▏#{p16:#{=/15/…:#{?window_zoomed_flag,◱ ,}#{window_name}}}▕}}#[bg=default#,fg=default#,none]\
#{P: #{?pane_active,,#[dim]}#{pane_current_command}#[none]},\
#{?pane_format, #{?pane_active,#[bold],}#{pane_current_command}#[none],}}}' 'swap-window -d -t %%'


# -- MISC --

# u = scroll mode
bind u copy-mode

# r = reload config
bind r {
	display 'reloading config...'
	source-file ~/.tmux.conf
}

# fix home/end key
# bind -n Home send Escape 'OH'
# bind -n End  send Escape 'OF'
#   NOTE: This is a dirty hack. There should be the other way around.
#         https://stackoverflow.com/questions/18600188/home-end-keys-do-not-work-in-tmux

# enable shift+enter & ctrl+enter key combinations
# bind -n S-Enter send "\u001B[13;2u"
# bind -n C-Enter send "\u001B[13;5u"
#   NOTE: This also requires to enable the keybindings in your terminal settings.


# ---- PLUGINS ----

# tmux-yank (enables copy)
set -g @plugin 'tmux-plugins/tmux-yank'

# tmux-resurrect
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @resurrect-save    'C-s'  # ctrl + s = save session
set -g @resurrect-restore 'C-r'  # ctrl + r = restore session

# tmux-better-mouse-mode
set -g @plugin 'nhdaly/tmux-better-mouse-mode'
set -g @scroll-down-exit-copy-mode 'on'
set -g @scroll-speed-num-lines-per-scroll '1'
set -g @emulate-scroll-for-no-mouse-alternate-buffer 'on'

# initialize TPM (TMUX Plugin Manager)
set -g @plugin 'tmux-plugins/tpm'
run '~/.tmux/plugins/tpm/tpm'

# NOTE: To install TPM:
#       $ git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm

# NOTE: To install TPM plugins:
#       Press `Prefix + Shift + i` in TMUX

# NOTE: To Update TPM plugins:
#       Press `Prefix + Shift + u` in TMUX

